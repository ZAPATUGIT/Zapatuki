@model ZapatukiFinal.Dtos.ViewModels.UserViewModel

@{
    ViewBag.Title = "ProductRegistration";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
<head>
    <link href="~/Content/Login.css" rel="stylesheet" />
</head>
<link href="~/Content/Login.css" rel="stylesheet" />

<h2>ProductRegistration</h2>

@if (Session["UserLogged"] == null)
{
    <div class="alert alert-danger">You are not logged</div>
}

<div class="card">
    <div class="card2">
        @using (Html.BeginForm("ProductRegister", "ProductRegister", FormMethod.Post, new { @class = "form" }))
        {
            @Html.AntiForgeryToken()


            <p id="heading">Product Register</p>

            <div class="field">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="input-icon" viewBox="0 0 16 16">
                    <path d="M8 0a3 3 0 1 0 0 6 3 3 0 0 0 0-6zM8 8a6 6 0 0 0-6 6v1h12v-1a6 6 0 0 0-6-6z" />
                </svg>
                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "input-field", placeholder = "Name", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                <svg viewBox="0 0 16 16" fill="currentColor" height="16" width="16" xmlns="http://www.w3.org/2000/svg" class="input-icon">
                    <path d="M12 5.293l-4.293 4.293-2.707-2.707a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l5-5a1 1 0 0 0-1.414-1.414z"></path>
                </svg>
                @Html.EditorFor(model => model.Product.Brand, new { htmlAttributes = new { @class = "input-field", placeholder = "Brand", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Product.Brand, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="input-icon" viewBox="0 0 16 16">
                    <path d="M2 0h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H2zM4 3h8v1H4V3zm0 3h8v1H4V6zm0 3h5v1H4V9z" />
                </svg>
                @Html.EditorFor(model => model.Product.Reference, new { htmlAttributes = new { @class = "input-field", placeholder = "Reference", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Product.Reference, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                <svg viewBox="0 0 16 16" fill="currentColor" height="16" width="16" xmlns="http://www.w3.org/2000/svg" class="input-icon">
                    <path d="M8 1C7.8 1.5 3 5.9 3 10.5 3 13.5 5.5 16 8 16s5-2.5 5-5.5C13 5.9 8.2 1.5 8 1zM8 15C6 15 4.5 13.5 4.5 10.5 4.5 6.9 7.6 3.4 8 2.7 8.4 3.4 11.5 6.9 11.5 10.5 11.5 13.5 10 15 8 15z" />
                </svg>
                @Html.EditorFor(model => model.Product.Color, new { htmlAttributes = new { @class = "input-field", placeholder = "Color", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Product.Color, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                <svg viewBox="0 0 16 16" fill="currentColor" height="16" width="16" xmlns="http://www.w3.org/2000/svg" class="input-icon">
                    <path d="M3.646 2.354a.5.5 0 0 1 .708 0L8 6.293 11.646 2.354a.5.5 0 0 1 .708.708L8.707 7l3.647 3.646a.5.5 0 0 1-.708.708L8 7.707 4.354 11.354a.5.5 0 0 1-.708-.708L7.293 7 3.646 3.354a.5.5 0 0 1 0-.708z" />
                </svg>
                @Html.EditorFor(model => model.Product.Size, new { htmlAttributes = new { @class = "input-field", placeholder = "Size", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Product.Size, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="input-icon" viewBox="0 0 16 16">
                    <path d="M2 0h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H2zM4 3h8v1H4V3zm0 3h8v1H4V6zm0 3h5v1H4V9z" />
                </svg>
                @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "input-field", placeholder = "Description", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                <svg viewBox="0 0 16 16" fill="currentColor" height="16" width="16" xmlns="http://www.w3.org/2000/svg" class="input-icon">
                    <path d="M12 5.293l-4.293 4.293-2.707-2.707a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l5-5a1 1 0 0 0-1.414-1.414z"></path>
                </svg>
                @Html.EditorFor(model => model.Product.Stock, new { htmlAttributes = new { @class = "input-field", placeholder = "Stock", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Product.Stock, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                <svg class="w-6 h-6 text-teal-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 24 24">
                    <path fill="currentColor" d="M10.7367 14.5876c.895.2365 2.8528.754 3.1643-.4966.3179-1.2781-1.5795-1.7039-2.5053-1.9117-.1034-.0232-.1947-.0437-.2694-.0623l-.6025 2.4153c.0611.0152.1328.0341.2129.0553Zm.8452-3.5291c.7468.1993 2.3746.6335 2.6581-.5025.2899-1.16213-1.2929-1.5124-2.066-1.68348-.0869-.01923-.1635-.03619-.2262-.0518l-.5462 2.19058c.0517.0129.1123.0291.1803.0472Z" />
                    <path fill="currentColor" fill-rule="evenodd" d="M9.57909 21.7008c5.35781 1.3356 10.78401-1.9244 12.11971-7.2816 1.3356-5.35745-1.9247-10.78433-7.2822-12.11995C9.06034.963624 3.6344 4.22425 2.2994 9.58206.963461 14.9389 4.22377 20.3652 9.57909 21.7008ZM14.2085 8.0526c1.3853.47719 2.3984 1.1925 2.1997 2.5231-.1441.9741-.6844 1.4456-1.4013 1.6116.9844.5128 1.485 1.2987 1.0078 2.6612-.5915 1.6919-1.9987 1.8347-3.8697 1.4807l-.454 1.8196-1.0972-.2734.4481-1.7953c-.2844-.0706-.575-.1456-.8741-.2269l-.44996 1.8038-1.09594-.2735.45407-1.8234c-.10059-.0258-.20185-.0522-.30385-.0788-.15753-.0411-.3168-.0827-.47803-.1231l-1.42812-.3559.54468-1.2563s.80844.215.7975.1991c.31063.0769.44844-.1256.50282-.2606l.71781-2.8766.11562.0288c-.04375-.0175-.08343-.0288-.11406-.0366l.51188-2.05344c.01375-.23312-.06688-.52719-.51125-.63812.01718-.01157-.79688-.19813-.79688-.19813l.29188-1.17187 1.51313.37781-.0013.00562c.2275.05657.4619.11032.7007.16469l.4497-1.80187 1.0965.27343-.4406 1.76657c.2944.06718.5906.135.8787.20687l.4375-1.755 1.0975.27344-.4493 1.8025Z" clip-rule="evenodd" />
                </svg>
                @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "input-field", placeholder = "Price", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="productTypeSelect">Select product type</label>
                <select id="productTypeSelect" name="Product.IdProductType" class="form-control">
                    <option value="">Select product type</option>
                    @foreach (var type in Model.Types)
                    {
                        <option value="@type.IdProductType" @(Model.Product.IdProductType == type.IdProductType ? "selected" : "")>
                            @type.NameProductType
                        </option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="supplierSelect">select supplier</label>
                <select id="supplierSelect" name="Product.IdSupplier" class="form-control">
                    <option value="">Select supplier</option>
                    @foreach (var supplier in Model.Suppliers)
                    {
                        <option value="@supplier.IdSupplier" @(Model.Product.IdSupplier == supplier.IdSupplier ? "selected" : "")>
                            @supplier.NameSupplier
                        </option>
                    }
                </select>
            </div>

            <div class="btn">
                <button type="submit" class="button1">Create Product</button>
                <button class="button1">@Html.ActionLink("Back to Home", "Index", "Home", new { area = "" }, new { @class = "nav-link" })</button>
                <button class="button1">@Html.ActionLink("Back to Seller", "Seller", "Seller", new { area = "" }, new { @class = "nav-link" })</button>
            </div>
        }
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.Response.message))
{
    <div class="alert alert-danger">
        @Model.Response.message
    </div>
}
